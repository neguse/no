## requirements to implement questions

* read one line from stdin
  * items are separated by space
* output to stdout
* make literal
* add, sub
* make function
* call function
  * recurse
* string insertion, deletion

## basic policy

* simple implementation
  * both questions and language processor

## specification

* operations, variables, system functions will be represented by single character
* single symbol will represents only single mean
* syntax tree generated by parser will be binary tree

## types

* integer
* array

## operations

```
symbol (`r`oot or `l`eaf) : meaning

= (r) : assignment(definition)

~ (r) : call function
\ (r) : create function(lambda)
_ (l) : indicator of no arguments on function call
( (r) : begin of arguments on function
, (l) : delimiter of arguments on function
) (l) : end of arguments of function

+ (r) : add
- (r) : sub

? (r) : if
: (l) : else

```

## system functions, constants

called by `~`

I : read
C : cons
A : car
D : cdr
N : nil

